"use server";
import prisma from "@/db/db";

const interests = [
  "Front End",
  "Back End",
  "Full Stack",
  "Mobile",
  "DevOps",
  "UI/UX",
  "Data Science",
  "Machine Learning",
  "Artificial Intelligence",
  "Cybersecurity",
  "Blockchain",
  "Cloud Computing",
  "Internet of Things",
  "Big Data",
  "Virtual Reality",
  "Augmented Reality",
  "Game Development",
  "Embedded Systems",
  "Robotics",
  "Quantum Computing",
  "5G",
  "Edge Computing",
  "Digital Marketing",
  "Product Management",
  "Project Management",
  "Business Analysis",
  "Quality Assurance",
];

const tags = [
  "React JS",
  "Next JS",
  "Gatsby",
  "Vue JS",
  "Angular",
  "Node JS",
  "Express JS",
  "Django",
  "Flask",
  "Laravel",
  "Symfony",
  "Spring",
  "Hibernate",
  "JPA",
  "JSP",
  "JSF",
  "Thymeleaf",
  "ASP.NET",
  "ASP.NET Core",
  "Ruby on Rails",
  "Phoenix",
  "Elixir",
  "React Native",
  "Flutter",
  "Xamarin",
  "Swift",
  "Objective-C",
  "Kotlin",
  "Java",
  "Python",
  "JavaScript",
  "TypeScript",
  "Dart",
  "C#",
  "C++",
  "C",
  "Ruby",
  "PHP",
  "Go",
  "Rust",
  "Scala",
  "Groovy",
  "Perl",
  "R",
  "Lua",
  "Docker",
  "Kubernetes",
  "Jenkins",
  "Travis CI",
  "Circle CI",
  "GitLab CI",
  "GitHub Actions",
  "AWS",
  "Azure",
  "Google Cloud",
  "IBM Cloud",
  "DigitalOcean",
  "Heroku",
  "Netlify",
  "Vercel",
  "Cloudflare",
  "Nginx",
  "Apache",
  "Figma",
  "Sketch",
  "Adobe XD",
  "InVision",
  "Zeplin",
  "Marvel",
  "Framer",
  "Principle",
  "NumPy",
  "Pandas",
  "Matplotlib",
  "Seaborn",
  "Scikit-learn",
  "TensorFlow",
  "Keras",
  "PyTorch",
  "OpenCV",
  "OpenAI",
  "GPT-3",
  "BERT",
  "Nmap",
  "Wireshark",
  "Metasploit",
  "Burp Suite",
  "Bitcoin",
  "Ethereum",
  "Ripple",
  "Litecoin",
  "AWS",
  "Azure",
  "Google Cloud",
  "IBM Cloud",
  "DigitalOcean",
  "Heroku",
  "Netlify",
  "Vercel",
  "Cloudflare",
  "Arduino",
  "Raspberry Pi",
  "ESP32",
  "Hadoop",
  "Spark",
  "Kafka",
  "Hive",
  "Oculus Rift",
  "HTC Vive",
  "PlayStation VR",
];

export async function seedTags() {
  for (const tag of tags) {
    await prisma.tag.create({
      data: {
        name: tag,
      },
    });
  }
}

export async function seedInterests() {
  for (const interest of interests) {
    await prisma.interest.create({
      data: {
        name: interest,
      },
    });
  }
}

export async function seed() {
  await seedTags();
  await seedInterests();
}
